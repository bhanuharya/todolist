{"ast":null,"code":"var _jsxFileName = \"/home/bhanuharya/awesome-project/src/App.js\";\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: []\n    };\n  }\n\n  addItem() {\n    //create item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    }; //copy of current list of items\n\n    const list = [...this.state.list]; // add new item to the list\n\n    list.push(newItem); //update state with new list and reset newItem input\n\n    this.setState({\n      list,\n      newItem: \"\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, \"Add an Item...\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Type item here....\",\n      value: this.state.newItem,\n      onChange: (e => this, updateInput(\"newItem\", e.target.value)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.addItem(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"Add\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bhanuharya/awesome-project/src/App.js"],"names":["React","Component","App","constructor","props","state","newItem","list","addItem","id","Math","random","value","slice","push","setState","render","e","updateInput","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AACxBE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAC,EADC;AAETC,MAAAA,IAAI,EAAC;AAFI,KAAb;AAIH;;AAEDC,EAAAA,OAAO,GAAE;AACL;AACA,UAAMF,OAAO,GAAC;AACVG,MAAAA,EAAE,EAAE,IAAIC,IAAI,CAACC,MAAL,EADE;AAEVC,MAAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,OAAX,CAAmBO,KAAnB;AAFG,KAAd,CAFK,CAOL;;AACA,UAAMN,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAb,CARK,CAUL;;AACAA,IAAAA,IAAI,CAACO,IAAL,CAAUR,OAAV,EAXK,CAaL;;AACA,SAAKS,QAAL,CAAc;AACVR,MAAAA,IADU;AAEVD,MAAAA,OAAO,EAAC;AAFE,KAAd;AAIH;;AACDU,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,WAAW,EAAC,oBAFZ;AAGA,MAAA,KAAK,EAAI,KAAKX,KAAL,CAAWC,OAHpB;AAIA,MAAA,QAAQ,GAAEW,CAAC,IAAI,IAAL,EAAUC,WAAW,CAAC,SAAD,EAAYD,CAAC,CAACE,MAAF,CAASP,KAArB,CAAvB,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,eASA;AACA,MAAA,OAAO,EAAI,MAAM,KAAKJ,OAAL,EADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATA,CADA,CADJ;AAqBH;;AAnDuB;;AAsD5B,eAAeN,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            newItem:\"\",\n            list:[]\n        }\n    }\n\n    addItem(){\n        //create item with unique id\n        const newItem={\n            id: 1 + Math.random(),\n            value: this.state.newItem.slice()\n        };\n        \n        //copy of current list of items\n        const list = [...this.state.list];\n\n        // add new item to the list\n        list.push(newItem);\n\n        //update state with new list and reset newItem input\n        this.setState({\n            list,\n            newItem:\"\" \n        })\n    }\n    render() {\n        return(\n            <div className = \"App\">\n            <div>\n            Add an Item...\n            <br/>\n            <input\n            type=\"text\"\n            placeholder=\"Type item here....\"\n            value = {this.state.newItem}\n            onChange={e => this,updateInput(\"newItem\", e.target.value)}\n            />\n            <button\n            onClick = {() => this.addItem()}>\n            \n            Add\n\n            </button>\n\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}